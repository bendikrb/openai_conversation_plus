[tool.poetry]
name = "openai_conversation_plus"
version = "0.0.0"
license = "MIT"
description = "Home Assistant developer tools"
authors = ["Bendik R. Brenne <bendik@konstant.no>"]
readme = "README.md"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Framework :: AsyncIO",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3",
]
packages = [
  { include = "openai_conversation_plus", from = "custom_components", to = "openai_conversation_plus" },
]

[tool.poetry.dependencies]
python = ">=3.13,<3.14"
homeassistant = "2025.3.0b0"
openai = "1.61.0"

[tool.ruff]
src = [
  "custom_components/openai_conversation_plus",
]

[tool.ruff.lint]
ignore = [
  "ANN101", # Self... explanatory
  "ANN401", # Opiniated warning on disallowing dynamically typed expressions
  "D203",   # Conflicts with other rules
  "D213",   # Conflicts with other rules
  "TID252", # Relative imports
  "RUF012", # Just broken

  # Formatter conflicts
  "COM812",
  "COM819",
  "D206",
  "E501",
  "ISC001",
  "Q000",
  "Q001",
  "Q002",
  "Q003",
  "W191",
]
select = ["ALL"]

[tool.ruff.lint.flake8-import-conventions.extend-aliases]
"homeassistant.helpers.area_registry" = "ar"
"homeassistant.helpers.config_validation" = "cv"
"homeassistant.helpers.device_registry" = "dr"
"homeassistant.helpers.entity_registry" = "er"
"homeassistant.helpers.issue_registry" = "ir"
voluptuous = "vol"

[tool.ruff.lint.isort]
force-sort-within-sections = true
known-first-party = ["homeassistant"]
combine-as-imports = true

[tool.pylint."MESSAGES CONTROL"]
# Reasons disabled:
# format - handled by ruff
# duplicate-code - unavoidable
# used-before-assignment - false positives with TYPE_CHECKING structures
disable = [
  "abstract-method",
  "duplicate-code",
  "format",
  "unexpected-keyword-arg",
  "used-before-assignment",
  "missing-function-docstring",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

